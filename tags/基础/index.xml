<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基础 on 魏奇的博客</title>
    <link>https://blog.imw7.com/tags/%E5%9F%BA%E7%A1%80/</link>
    <description>Recent content in 基础 on 魏奇的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 28 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.imw7.com/tags/%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go性能调优</title>
      <link>https://blog.imw7.com/post/Go/preformance_optimisation/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/preformance_optimisation/</guid>
      <description>&lt;p&gt;在计算机性能调试领域里，profiling 是指对应用程序的画像，画像就是应用程序使用 CPU 和内存的情况。 Go语言是一个对性能特别看重的语言，因此语言中自带了 profiling 的库，这篇文章就要讲解怎么在 Go 中做 profiling。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言之文件操作</title>
      <link>https://blog.imw7.com/post/Go/go_file/</link>
      <pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/go_file/</guid>
      <description>&lt;p&gt;本文主要介绍了Go语言中文件读写的相关操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之单元测试</title>
      <link>https://blog.imw7.com/post/Go/16_test/</link>
      <pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/16_test/</guid>
      <description>&lt;p&gt;不写测试的开发不是好程序员。这篇文章主要介绍下在Go语言中如何做单元测试和基准测试。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之网络编程</title>
      <link>https://blog.imw7.com/post/Go/15_socket/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/15_socket/</guid>
      <description>&lt;p&gt;现在我们几乎每天都在使用互联网，我们前面已经学习了如何编写Go语言程序，但是如何才能让我们的程序通过网络互相通信呢？本章我们就一起来学习下Go语言中的网络编程。 关于网络编程其实是一个很庞大的领域，本文只是简单的演示了如何使用net包进行TCP和UDP通信。如需了解更详细的网络编程请自行检索和阅读专业资料。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之并发</title>
      <link>https://blog.imw7.com/post/Go/14_concurrence/</link>
      <pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/14_concurrence/</guid>
      <description>&lt;p&gt;并发是编程里面一个非常重要的概念，Go语言在语言层面天生支持并发，这也是Go语言流行的一个很重要的原因。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之反射</title>
      <link>https://blog.imw7.com/post/Go/13_reflect/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/13_reflect/</guid>
      <description>&lt;p&gt;本文介绍了Go语言反射的意义和基本使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之接口</title>
      <link>https://blog.imw7.com/post/Go/12_interface/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/12_interface/</guid>
      <description>&lt;p&gt;接口（interface）定义了一个对象的行为规范，只定义规范不实现，由具体的对象来实现规范的细节。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之包</title>
      <link>https://blog.imw7.com/post/Go/11_package/</link>
      <pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/11_package/</guid>
      <description>&lt;p&gt;在工程化的Go语言开发项目中，Go语言的源码复用是建立在包（package）基础之上的。本文介绍了Go语言中如何定义包、如何导出包的内容及如何导入其他包。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之结构体</title>
      <link>https://blog.imw7.com/post/Go/10_struct/</link>
      <pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/10_struct/</guid>
      <description>&lt;p&gt;Go语言中没有“类”的概念，也不支持“类”的继承等面向对象的概念。Go语言中通过结构体的内嵌再配合接口比面向对象具有更高的扩展性和灵活性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之函数</title>
      <link>https://blog.imw7.com/post/Go/09_function/</link>
      <pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/09_function/</guid>
      <description>&lt;p&gt;函数是组织好的、可重复使用的、用于执行指定任务的代码块。本文介绍了Go语言中函数的相关内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之map</title>
      <link>https://blog.imw7.com/post/Go/08_map/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/08_map/</guid>
      <description>&lt;p&gt;Go语言中提供的映射关系容器为&lt;code&gt;map&lt;/code&gt;，其内部使用&lt;code&gt;散列表（hash）&lt;/code&gt;实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之切片</title>
      <link>https://blog.imw7.com/post/Go/06_slice/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/06_slice/</guid>
      <description>&lt;p&gt;本文主要介绍Go语言中切片（slice）及它的基本使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之指针</title>
      <link>https://blog.imw7.com/post/Go/07_pointer/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/07_pointer/</guid>
      <description>&lt;p&gt;区别于C/C++中的指针，Go语言中的指针不能进行偏移和运算，是安全指针。&lt;/p&gt;
&lt;p&gt;要搞明白Go语言中的指针需要先知道3个概念：指针地址、指针类型和指针取值。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之数组</title>
      <link>https://blog.imw7.com/post/Go/05_array/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/05_array/</guid>
      <description>&lt;p&gt;本文主要介绍Go语言中数组（array）及它的基本使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之流程控制</title>
      <link>https://blog.imw7.com/post/Go/04_process_control/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/04_process_control/</guid>
      <description>&lt;p&gt;流程控制是每种编程语言控制逻辑走向和执行次序的重要部分，流程控制可以说是一门语言的“经脉”。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之运算符</title>
      <link>https://blog.imw7.com/post/Go/03_operators/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/03_operators/</guid>
      <description>&lt;p&gt;运算符用于在程序运行时执行数学或逻辑运算。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之基本数据类型</title>
      <link>https://blog.imw7.com/post/Go/02_datatype/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/02_datatype/</guid>
      <description>&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;语言中有丰富的数据类型，除了基本的&lt;code&gt;整型&lt;/code&gt;、&lt;code&gt;浮点型&lt;/code&gt;、&lt;code&gt;布尔型&lt;/code&gt;、&lt;code&gt;字符串&lt;/code&gt;外，还有&lt;code&gt;数组&lt;/code&gt;、&lt;code&gt;切片&lt;/code&gt;、&lt;code&gt;结构体&lt;/code&gt;、&lt;code&gt;函数&lt;/code&gt;、&lt;code&gt;map&lt;/code&gt;和&lt;code&gt;通道(channel)&lt;/code&gt;等。&lt;code&gt;Go&lt;/code&gt; 语言的基本类型和其他语言大同小异。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言基础之变量和常量</title>
      <link>https://blog.imw7.com/post/Go/01_var_and_const/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.imw7.com/post/Go/01_var_and_const/</guid>
      <description>&lt;p&gt;变量和常量是编程必不可少的部分，也是很好理解的一部分。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>